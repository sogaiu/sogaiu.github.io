@[{:event-num 0 :frame-num 0 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 0 :peg (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :state @{ :captures @[] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[] :tags @[] :text-end 4 :text-start 0} :type :entry} {:event-num 1 :frame-num 1 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 0 :peg (number :d nil :tag) :state @{ :captures @[] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[] :tags @[] :text-end 4 :text-start 0} :type :entry} {:event-num 2 :frame-num 2 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 0 :peg :d :state @{ :captures @[] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[] :tags @[] :text-end 4 :text-start 0} :type :entry} {:event-num 3 :frame-num 3 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 0 :peg (range "09") :state @{ :captures @[] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[] :tags @[] :text-end 4 :text-start 0} :type :entry} {:event-num 4 :frame-num 3 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 0 :peg (range "09") :ret 1 :state @{ :captures @[] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[] :tags @[] :text-end 4 :text-start 0} :type :exit} {:event-num 5 :frame-num 2 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 0 :peg :d :ret 1 :state @{ :captures @[] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[] :tags @[] :text-end 4 :text-start 0} :type :exit} {:event-num 6 :frame-num 1 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 0 :peg (number :d nil :tag) :ret 1 :state @{ :captures @[3] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[3] :tags @[:tag] :text-end 4 :text-start 0} :type :exit} {:event-num 7 :frame-num 4 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 1 :peg (capture (lenprefix (backref :tag) 1)) :state @{ :captures @[3] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[3] :tags @[:tag] :text-end 4 :text-start 0} :type :entry} {:event-num 8 :frame-num 5 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 1 :peg (lenprefix (backref :tag) 1) :state @{ :captures @[3] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[3] :tags @[:tag] :text-end 4 :text-start 0} :type :entry} {:event-num 9 :frame-num 6 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 1 :peg (backref :tag) :state @{ :captures @[3] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[3] :tags @[:tag] :text-end 4 :text-start 0} :type :entry} {:event-num 10 :frame-num 6 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 1 :peg (backref :tag) :ret 1 :state @{ :captures @[3 3] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[3 3] :tags @[:tag :tag] :text-end 4 :text-start 0} :type :exit} {:event-num 11 :frame-num 7 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 1 :peg 1 :state @{ :captures @[3] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[3] :tags @[:tag] :text-end 4 :text-start 0} :type :entry} {:event-num 12 :frame-num 7 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 1 :peg 1 :ret 2 :state @{ :captures @[3] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[3] :tags @[:tag] :text-end 4 :text-start 0} :type :exit} {:event-num 13 :frame-num 8 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 2 :peg 1 :state @{ :captures @[3] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[3] :tags @[:tag] :text-end 4 :text-start 0} :type :entry} {:event-num 14 :frame-num 8 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 2 :peg 1 :ret 3 :state @{ :captures @[3] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[3] :tags @[:tag] :text-end 4 :text-start 0} :type :exit} {:event-num 15 :frame-num 9 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 3 :peg 1 :state @{ :captures @[3] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[3] :tags @[:tag] :text-end 4 :text-start 0} :type :entry} {:event-num 16 :frame-num 9 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 3 :peg 1 :ret 4 :state @{ :captures @[3] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[3] :tags @[:tag] :text-end 4 :text-start 0} :type :exit} {:event-num 17 :frame-num 5 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 1 :peg (lenprefix (backref :tag) 1) :ret 4 :state @{ :captures @[3] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[3] :tags @[:tag] :text-end 4 :text-start 0} :type :exit} {:event-num 18 :frame-num 4 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 1 :peg (capture (lenprefix (backref :tag) 1)) :ret 4 :state @{ :captures @[3 "abc"] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[3 "abc"] :tags @[:tag nil] :text-end 4 :text-start 0} :type :exit} {:event-num 19 :frame-num 0 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 0 :peg (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :ret 4 :state @{ :captures @[3 "abc"] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[3 "abc"] :tags @[:tag nil] :text-end 4 :text-start 0} :type :exit}]
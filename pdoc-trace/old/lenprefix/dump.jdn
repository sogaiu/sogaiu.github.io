@[{:entry 0 :event-num 0 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 0 :peg (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :state @{ :captures @[] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[] :tags @[] :text-end 4 :text-start 0}} {:entry 1 :event-num 1 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 0 :peg (number :d nil :tag) :state @{ :captures @[] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[] :tags @[] :text-end 4 :text-start 0}} {:entry 2 :event-num 2 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 0 :peg :d :state @{ :captures @[] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[] :tags @[] :text-end 4 :text-start 0}} {:entry 3 :event-num 3 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 0 :peg (range "09") :state @{ :captures @[] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[] :tags @[] :text-end 4 :text-start 0}} {:event-num 4 :exit 3 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 0 :peg (range "09") :ret 1 :state @{ :captures @[] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[] :tags @[] :text-end 4 :text-start 0}} {:event-num 5 :exit 2 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 0 :peg :d :ret 1 :state @{ :captures @[] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[] :tags @[] :text-end 4 :text-start 0}} {:event-num 6 :exit 1 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 0 :peg (number :d nil :tag) :ret 1 :state @{ :captures @[3] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[3] :tags @[:tag] :text-end 4 :text-start 0}} {:entry 4 :event-num 7 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 1 :peg (capture (lenprefix (backref :tag) 1)) :state @{ :captures @[3] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[3] :tags @[:tag] :text-end 4 :text-start 0}} {:entry 5 :event-num 8 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 1 :peg (lenprefix (backref :tag) 1) :state @{ :captures @[3] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[3] :tags @[:tag] :text-end 4 :text-start 0}} {:entry 6 :event-num 9 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 1 :peg (backref :tag) :state @{ :captures @[3] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[3] :tags @[:tag] :text-end 4 :text-start 0}} {:event-num 10 :exit 6 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 1 :peg (backref :tag) :ret 1 :state @{ :captures @[3 3] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[3 3] :tags @[:tag :tag] :text-end 4 :text-start 0}} {:entry 7 :event-num 11 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 1 :peg 1 :state @{ :captures @[3] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[3] :tags @[:tag] :text-end 4 :text-start 0}} {:event-num 12 :exit 7 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 1 :peg 1 :ret 2 :state @{ :captures @[3] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[3] :tags @[:tag] :text-end 4 :text-start 0}} {:entry 8 :event-num 13 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 2 :peg 1 :state @{ :captures @[3] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[3] :tags @[:tag] :text-end 4 :text-start 0}} {:event-num 14 :exit 8 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 2 :peg 1 :ret 3 :state @{ :captures @[3] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[3] :tags @[:tag] :text-end 4 :text-start 0}} {:entry 9 :event-num 15 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 3 :peg 1 :state @{ :captures @[3] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[3] :tags @[:tag] :text-end 4 :text-start 0}} {:event-num 16 :exit 9 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 3 :peg 1 :ret 4 :state @{ :captures @[3] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[3] :tags @[:tag] :text-end 4 :text-start 0}} {:event-num 17 :exit 5 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 1 :peg (lenprefix (backref :tag) 1) :ret 4 :state @{ :captures @[3] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[3] :tags @[:tag] :text-end 4 :text-start 0}} {:event-num 18 :exit 4 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 1 :peg (capture (lenprefix (backref :tag) 1)) :ret 4 :state @{ :captures @[3 "abc"] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[3 "abc"] :tags @[:tag nil] :text-end 4 :text-start 0}} {:event-num 19 :exit 0 :grammar @{:main (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1)))} :index 0 :peg (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :ret 4 :state @{ :captures @[3 "abc"] :extrav () :grammar (sequence (number :d nil :tag) (capture (lenprefix (backref :tag) 1))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "3abc" :outer-text-end 4 :scratch @"" :start 0 :tagged-captures @[3 "abc"] :tags @[:tag nil] :text-end 4 :text-start 0}}]
@[{:entry 0 :event-num 0 :grammar @{:main (sequence (capture "a") "b" (capture (backmatch)))} :index 0 :peg (sequence (capture "a") "b" (capture (backmatch))) :state @{ :captures @[] :extrav () :grammar (sequence (capture "a") "b" (capture (backmatch))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "aba" :outer-text-end 3 :scratch @"" :start 0 :tagged-captures @[] :tags @[] :text-end 3 :text-start 0}} {:entry 1 :event-num 1 :grammar @{:main (sequence (capture "a") "b" (capture (backmatch)))} :index 0 :peg (capture "a") :state @{ :captures @[] :extrav () :grammar (sequence (capture "a") "b" (capture (backmatch))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "aba" :outer-text-end 3 :scratch @"" :start 0 :tagged-captures @[] :tags @[] :text-end 3 :text-start 0}} {:entry 2 :event-num 2 :grammar @{:main (sequence (capture "a") "b" (capture (backmatch)))} :index 0 :peg "a" :state @{ :captures @[] :extrav () :grammar (sequence (capture "a") "b" (capture (backmatch))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "aba" :outer-text-end 3 :scratch @"" :start 0 :tagged-captures @[] :tags @[] :text-end 3 :text-start 0}} {:event-num 3 :exit 2 :grammar @{:main (sequence (capture "a") "b" (capture (backmatch)))} :index 0 :peg "a" :ret 1 :state @{ :captures @[] :extrav () :grammar (sequence (capture "a") "b" (capture (backmatch))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "aba" :outer-text-end 3 :scratch @"" :start 0 :tagged-captures @[] :tags @[] :text-end 3 :text-start 0}} {:event-num 4 :exit 1 :grammar @{:main (sequence (capture "a") "b" (capture (backmatch)))} :index 0 :peg (capture "a") :ret 1 :state @{ :captures @["a"] :extrav () :grammar (sequence (capture "a") "b" (capture (backmatch))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "aba" :outer-text-end 3 :scratch @"" :start 0 :tagged-captures @["a"] :tags @[nil] :text-end 3 :text-start 0}} {:entry 3 :event-num 5 :grammar @{:main (sequence (capture "a") "b" (capture (backmatch)))} :index 1 :peg "b" :state @{ :captures @["a"] :extrav () :grammar (sequence (capture "a") "b" (capture (backmatch))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "aba" :outer-text-end 3 :scratch @"" :start 0 :tagged-captures @["a"] :tags @[nil] :text-end 3 :text-start 0}} {:event-num 6 :exit 3 :grammar @{:main (sequence (capture "a") "b" (capture (backmatch)))} :index 1 :peg "b" :ret 2 :state @{ :captures @["a"] :extrav () :grammar (sequence (capture "a") "b" (capture (backmatch))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "aba" :outer-text-end 3 :scratch @"" :start 0 :tagged-captures @["a"] :tags @[nil] :text-end 3 :text-start 0}} {:entry 4 :event-num 7 :grammar @{:main (sequence (capture "a") "b" (capture (backmatch)))} :index 2 :peg (capture (backmatch)) :state @{ :captures @["a"] :extrav () :grammar (sequence (capture "a") "b" (capture (backmatch))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "aba" :outer-text-end 3 :scratch @"" :start 0 :tagged-captures @["a"] :tags @[nil] :text-end 3 :text-start 0}} {:entry 5 :event-num 8 :grammar @{:main (sequence (capture "a") "b" (capture (backmatch)))} :index 2 :peg (backmatch) :state @{ :captures @["a"] :extrav () :grammar (sequence (capture "a") "b" (capture (backmatch))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "aba" :outer-text-end 3 :scratch @"" :start 0 :tagged-captures @["a"] :tags @[nil] :text-end 3 :text-start 0}} {:event-num 9 :exit 5 :grammar @{:main (sequence (capture "a") "b" (capture (backmatch)))} :index 2 :peg (backmatch) :ret 3 :state @{ :captures @["a"] :extrav () :grammar (sequence (capture "a") "b" (capture (backmatch))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "aba" :outer-text-end 3 :scratch @"" :start 0 :tagged-captures @["a"] :tags @[nil] :text-end 3 :text-start 0}} {:event-num 10 :exit 4 :grammar @{:main (sequence (capture "a") "b" (capture (backmatch)))} :index 2 :peg (capture (backmatch)) :ret 3 :state @{ :captures @["a" "a"] :extrav () :grammar (sequence (capture "a") "b" (capture (backmatch))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "aba" :outer-text-end 3 :scratch @"" :start 0 :tagged-captures @["a" "a"] :tags @[nil nil] :text-end 3 :text-start 0}} {:event-num 11 :exit 0 :grammar @{:main (sequence (capture "a") "b" (capture (backmatch)))} :index 0 :peg (sequence (capture "a") "b" (capture (backmatch))) :ret 3 :state @{ :captures @["a" "a"] :extrav () :grammar (sequence (capture "a") "b" (capture (backmatch))) :has-backref true :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "aba" :outer-text-end 3 :scratch @"" :start 0 :tagged-captures @["a" "a"] :tags @[nil nil] :text-end 3 :text-start 0}}]
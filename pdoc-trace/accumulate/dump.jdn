@[{:entry 0 :event-num 0 :grammar @{:main (accumulate (sequence (capture 1) (capture 1) (capture 1)))} :index 0 :peg (accumulate (sequence (capture 1) (capture 1) (capture 1))) :state @{ :captures @[] :extrav () :grammar (accumulate (sequence (capture 1) (capture 1) (capture 1))) :has-backref false :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "abc" :outer-text-end 3 :scratch @"" :start 0 :tagged-captures @[] :tags @[] :text-end 3 :text-start 0}} {:entry 1 :event-num 1 :grammar @{:main (accumulate (sequence (capture 1) (capture 1) (capture 1)))} :index 0 :peg (sequence (capture 1) (capture 1) (capture 1)) :state @{ :captures @[] :extrav () :grammar (accumulate (sequence (capture 1) (capture 1) (capture 1))) :has-backref false :linemap @[] :linemaplen -1 :mode :peg-mode-accumulate :original-text "abc" :outer-text-end 3 :scratch @"" :start 0 :tagged-captures @[] :tags @[] :text-end 3 :text-start 0}} {:entry 2 :event-num 2 :grammar @{:main (accumulate (sequence (capture 1) (capture 1) (capture 1)))} :index 0 :peg (capture 1) :state @{ :captures @[] :extrav () :grammar (accumulate (sequence (capture 1) (capture 1) (capture 1))) :has-backref false :linemap @[] :linemaplen -1 :mode :peg-mode-accumulate :original-text "abc" :outer-text-end 3 :scratch @"" :start 0 :tagged-captures @[] :tags @[] :text-end 3 :text-start 0}} {:entry 3 :event-num 3 :grammar @{:main (accumulate (sequence (capture 1) (capture 1) (capture 1)))} :index 0 :peg 1 :state @{ :captures @[] :extrav () :grammar (accumulate (sequence (capture 1) (capture 1) (capture 1))) :has-backref false :linemap @[] :linemaplen -1 :mode :peg-mode-accumulate :original-text "abc" :outer-text-end 3 :scratch @"" :start 0 :tagged-captures @[] :tags @[] :text-end 3 :text-start 0}} {:event-num 4 :exit 3 :grammar @{:main (accumulate (sequence (capture 1) (capture 1) (capture 1)))} :index 0 :peg 1 :ret 1 :state @{ :captures @[] :extrav () :grammar (accumulate (sequence (capture 1) (capture 1) (capture 1))) :has-backref false :linemap @[] :linemaplen -1 :mode :peg-mode-accumulate :original-text "abc" :outer-text-end 3 :scratch @"" :start 0 :tagged-captures @[] :tags @[] :text-end 3 :text-start 0}} {:event-num 5 :exit 2 :grammar @{:main (accumulate (sequence (capture 1) (capture 1) (capture 1)))} :index 0 :peg (capture 1) :ret 1 :state @{ :captures @[] :extrav () :grammar (accumulate (sequence (capture 1) (capture 1) (capture 1))) :has-backref false :linemap @[] :linemaplen -1 :mode :peg-mode-accumulate :original-text "abc" :outer-text-end 3 :scratch @"a" :start 0 :tagged-captures @[] :tags @[] :text-end 3 :text-start 0}} {:entry 4 :event-num 6 :grammar @{:main (accumulate (sequence (capture 1) (capture 1) (capture 1)))} :index 1 :peg (capture 1) :state @{ :captures @[] :extrav () :grammar (accumulate (sequence (capture 1) (capture 1) (capture 1))) :has-backref false :linemap @[] :linemaplen -1 :mode :peg-mode-accumulate :original-text "abc" :outer-text-end 3 :scratch @"a" :start 0 :tagged-captures @[] :tags @[] :text-end 3 :text-start 0}} {:entry 5 :event-num 7 :grammar @{:main (accumulate (sequence (capture 1) (capture 1) (capture 1)))} :index 1 :peg 1 :state @{ :captures @[] :extrav () :grammar (accumulate (sequence (capture 1) (capture 1) (capture 1))) :has-backref false :linemap @[] :linemaplen -1 :mode :peg-mode-accumulate :original-text "abc" :outer-text-end 3 :scratch @"a" :start 0 :tagged-captures @[] :tags @[] :text-end 3 :text-start 0}} {:event-num 8 :exit 5 :grammar @{:main (accumulate (sequence (capture 1) (capture 1) (capture 1)))} :index 1 :peg 1 :ret 2 :state @{ :captures @[] :extrav () :grammar (accumulate (sequence (capture 1) (capture 1) (capture 1))) :has-backref false :linemap @[] :linemaplen -1 :mode :peg-mode-accumulate :original-text "abc" :outer-text-end 3 :scratch @"a" :start 0 :tagged-captures @[] :tags @[] :text-end 3 :text-start 0}} {:event-num 9 :exit 4 :grammar @{:main (accumulate (sequence (capture 1) (capture 1) (capture 1)))} :index 1 :peg (capture 1) :ret 2 :state @{ :captures @[] :extrav () :grammar (accumulate (sequence (capture 1) (capture 1) (capture 1))) :has-backref false :linemap @[] :linemaplen -1 :mode :peg-mode-accumulate :original-text "abc" :outer-text-end 3 :scratch @"ab" :start 0 :tagged-captures @[] :tags @[] :text-end 3 :text-start 0}} {:entry 6 :event-num 10 :grammar @{:main (accumulate (sequence (capture 1) (capture 1) (capture 1)))} :index 2 :peg (capture 1) :state @{ :captures @[] :extrav () :grammar (accumulate (sequence (capture 1) (capture 1) (capture 1))) :has-backref false :linemap @[] :linemaplen -1 :mode :peg-mode-accumulate :original-text "abc" :outer-text-end 3 :scratch @"ab" :start 0 :tagged-captures @[] :tags @[] :text-end 3 :text-start 0}} {:entry 7 :event-num 11 :grammar @{:main (accumulate (sequence (capture 1) (capture 1) (capture 1)))} :index 2 :peg 1 :state @{ :captures @[] :extrav () :grammar (accumulate (sequence (capture 1) (capture 1) (capture 1))) :has-backref false :linemap @[] :linemaplen -1 :mode :peg-mode-accumulate :original-text "abc" :outer-text-end 3 :scratch @"ab" :start 0 :tagged-captures @[] :tags @[] :text-end 3 :text-start 0}} {:event-num 12 :exit 7 :grammar @{:main (accumulate (sequence (capture 1) (capture 1) (capture 1)))} :index 2 :peg 1 :ret 3 :state @{ :captures @[] :extrav () :grammar (accumulate (sequence (capture 1) (capture 1) (capture 1))) :has-backref false :linemap @[] :linemaplen -1 :mode :peg-mode-accumulate :original-text "abc" :outer-text-end 3 :scratch @"ab" :start 0 :tagged-captures @[] :tags @[] :text-end 3 :text-start 0}} {:event-num 13 :exit 6 :grammar @{:main (accumulate (sequence (capture 1) (capture 1) (capture 1)))} :index 2 :peg (capture 1) :ret 3 :state @{ :captures @[] :extrav () :grammar (accumulate (sequence (capture 1) (capture 1) (capture 1))) :has-backref false :linemap @[] :linemaplen -1 :mode :peg-mode-accumulate :original-text "abc" :outer-text-end 3 :scratch @"abc" :start 0 :tagged-captures @[] :tags @[] :text-end 3 :text-start 0}} {:event-num 14 :exit 1 :grammar @{:main (accumulate (sequence (capture 1) (capture 1) (capture 1)))} :index 0 :peg (sequence (capture 1) (capture 1) (capture 1)) :ret 3 :state @{ :captures @[] :extrav () :grammar (accumulate (sequence (capture 1) (capture 1) (capture 1))) :has-backref false :linemap @[] :linemaplen -1 :mode :peg-mode-accumulate :original-text "abc" :outer-text-end 3 :scratch @"abc" :start 0 :tagged-captures @[] :tags @[] :text-end 3 :text-start 0}} {:event-num 15 :exit 0 :grammar @{:main (accumulate (sequence (capture 1) (capture 1) (capture 1)))} :index 0 :peg (accumulate (sequence (capture 1) (capture 1) (capture 1))) :ret 3 :state @{ :captures @["abc"] :extrav () :grammar (accumulate (sequence (capture 1) (capture 1) (capture 1))) :has-backref false :linemap @[] :linemaplen -1 :mode :peg-mode-normal :original-text "abc" :outer-text-end 3 :scratch @"" :start 0 :tagged-captures @[] :tags @[] :text-end 3 :text-start 0}}]